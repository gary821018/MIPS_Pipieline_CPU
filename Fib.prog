@0000_0000
001_000_00000_00001_00000_00000_001001	// Fib : ADDI $r1, $r0, 9		(r1 = length-1)
@0000_0001
001_000_00000_00101_00000_00000_000000	// ADDI $r5, $r0, 0			(r5 = index)
@0000_0002
001_000_00000_00100_00000_00000_000000	// ADDI $r4, $r0, 0 (move $r4, 0)	(r4 = ans)
@0000_0003
101_011_00101_00100_00000_00000_000000 	// SW r4,0(r5)
@0000_0004
001_000_00101_00101_00000_00000_000001	// ADDI $r5, $r5, 1
@0000_0005
000_100_00001_00100_00000_00000_001100	// BEQ $r1, $r4, RESULT 
@0000_0006
001_000_00000_00100_00000_00000_000001	// ADDI $r4, $r0, 1 (move $r4, 1)
@0000_0007
101_011_00101_00100_00000_00000_000000 	// SW r4,0(r5)
@0000_0008
000_100_00001_00100_00000_00000_001001	// BEQ $r4, $r1, RESULT 
@0000_0009
001_000_00000_00010_00000_00000_000000	// ADDI $r2, $r0, 0
@0000_000a
001_000_00000_00011_00000_00000_000001	// ADDI $r3, $r0, 1
@0000_000b
000_100_00001_00101_00000_00000_000110	// Loop: BEQ $r5, $r1, RESULT 
@0000_000c
001_000_00101_00101_00000_00000_000001	// ADDI $r5, $r5, 1
@0000_000d
000_000_00010_00011_00100_00000_000001	// ADD $r4, $r2, $r3		
@0000_000e
101_011_00101_00100_00000_00000_000000 	// SW r4,0(r5)
@0000_000f
000_000_00000_00011_00010_00000_000001	// ADD $r2, $r0, $r3 (move $r2, $r3)
@0000_0010
000_000_00000_00100_00011_00000_000001	// ADD $r3, $r0, $r4 (move $r3, $r4)
@0000_0011
000_011_00000_00000_00000_00000_001011	// j Loop (hex : 8)
@0000_0012
111_111_00000_00000_00000_00000_000000	// RESULT: NOP, result stored in $r4
